进程和线程：
	进程是指一个内存中运行的应用程序，每个进程都有独立的一块内存空间，一个进程中可以启动多个线程
	线程是指进程的一个执行流程，一个进程中可以运行多个线程。线程总属于某个进程，进程中的多个线程共享进程的内存
	
守护线程：在程序运行的时候在后台提供一种通用服务的线程，比如垃圾回收线程
当所有用户线程执行完毕后，JVM自动关闭

同步锁加在代码段上
Java语言 synchronized关键字示例：
	synchronized(同步锁){
	//访问共享资源，需要同步的代码段
	}
需要注意的是，同步锁本身一定要是个共享的对象。如(public static final)

在什么情况下需要使用多线程：
	1. 程序包含复杂的计算任务时：主要是利用多线程获得更多的CPU时间(资源)
	2. 处理速度较慢的外围设备：比如打印时，再比如网络程序，涉及数据包的收发，时间因素不定。使用独立的线程处理这些任务，使程序不必专门等待结果
	3. 程序设计自身的需要：Windows系统是基于消息循环的抢占式多任务系统，为使消息循环系统不至于阻塞，程序需要多个线程来共同完成任务
	
线程同步的意思就是排队，几个线程之间要排队，一个一个对共享资源进行操作

