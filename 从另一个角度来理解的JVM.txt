Java虚拟机中，数据类型可以分为两类：基本类型和引用类型。基本类型的变量保存原始值，引用类型的变量保存引用值
基本类型包括：byte short int long double float boolean
引用类型包括：类，接口，数组

堆和栈：
	栈是运行时的单位，而堆是存储的单位
	栈解决程序的运行问题，即程序如何执行，或者说如何处理数据；堆解决的是数据存储的问题
	
强引用：一般声明对象时生成的引用，垃圾回收器不会回收它。内存空间不足时，虚拟机宁愿抛出OutOfMemory错误，也不会回收它
软引用：如果内存空间不足，就会被回收。一般被作为缓存来使用。
弱引用：与软引用类似，也作为缓存。但在垃圾回收时，一定会被回收掉。
虚引用：如果一个对象仅有虚引用，那么就像没有引用一样。在任何时候都可能被垃圾回收器回收。

垃圾回收基本算法：
	引用计数：此对象有一个引用，则增加一个计数，删除一个引用则减少一个计数。垃圾回收时，收集计数为0的对象(循环)
	标记-清除：从根节点开始标记所有被引用的对象，然后遍历整个堆，把未被标记的对象清除。此算法需要暂停整个应用，同时会产生内存碎片
	复制：此算法把内存空间划为两个相等的区域，每次只使用其中一个区域。垃圾回收时，遍历当前使用区域，把正在使用中的对象复制到另外一个区域中。次算法每次只处理正在使用中的对象，因此复制成本比较小，同时复制过去以后还能进行相应的内存整理，不会出现“碎片”问题。当然，此算法的缺点也是很明显的，就是需要两倍内存空间。
	标记-整理：第一阶段从根节点开始标记所有被引用对象，第二阶段遍历整个堆，把清除未标记对象并且把存活对象“压缩”到堆的其中一块，按顺序排放。
	
分代收集：
	虚拟机中分为三个代：年轻代 年老代 持久代
	年轻代：所有新生成的对象都是放在年轻代的。年轻代分为三个区，一个Eden区，两个Survivor区。为了便于交换，要保证其中一个为空。