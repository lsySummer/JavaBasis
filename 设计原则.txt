面向对象的三大特性：封装、继承、多态
多态的定义：指允许不同类的对象对同一消息作出响应。即同一消息可以根据发送对象的不同而采用不同的行为方式。
实现多态的技术：动态绑定，是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用其相应的方法
多态的作用：消除类型之间的耦合关系

设计原则：
1. 找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起
2. 针对接口编程，而不是针对实现编程
3. 多用组合，少用继承
4. 为了交互对象之间的松耦合而努力
5. 类应该对拓展开房，对修改关闭

策略模式定义了算法族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化独立于使用算法的客户

观察者模式定义了对象之间的一对多依赖， 这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新

装饰者模式动态地将责任附加到对象上。若要拓展功能，装饰者提供了比继承更有弹性的替代方案。